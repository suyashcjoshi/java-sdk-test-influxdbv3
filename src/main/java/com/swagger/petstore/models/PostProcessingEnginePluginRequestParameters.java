// This file was generated by liblab | https://liblab.com/

package com.swagger.petstore.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class PostProcessingEnginePluginRequestParameters {

  /**
   * The format of the data in the request body.
   *
   */
  @JsonProperty("Content-Type")
  private JsonNullable<ContentType> contentType;

  @JsonProperty("requestBody")
  private JsonNullable<Object> requestBody;

  @JsonIgnore
  public ContentType getContentType() {
    return contentType.orElse(null);
  }

  @JsonIgnore
  public Object getRequestBody() {
    return requestBody.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class PostProcessingEnginePluginRequestParametersBuilder {

    private JsonNullable<ContentType> contentType = JsonNullable.undefined();

    @JsonProperty("Content-Type")
    public PostProcessingEnginePluginRequestParametersBuilder contentType(ContentType value) {
      if (value == null) {
        throw new IllegalStateException("contentType cannot be null");
      }
      this.contentType = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Object> requestBody = JsonNullable.undefined();

    @JsonProperty("requestBody")
    public PostProcessingEnginePluginRequestParametersBuilder requestBody(Object value) {
      if (value == null) {
        throw new IllegalStateException("requestBody cannot be null");
      }
      this.requestBody = JsonNullable.of(value);
      return this;
    }
  }
}
